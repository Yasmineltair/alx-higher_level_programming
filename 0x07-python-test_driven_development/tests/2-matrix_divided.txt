import module:
    >>> matrix_divided = __import__("2-matrix_divided").matrix_divided

int input:
>>> matrix = [[3, 6, 9], [1, 2, 3]]
>>> matrix_divided(matrix, 3)
[[1.0, 2.0, 3.0], [0.33, 0.67, 1.0]]

float input:
>>> matrix = [[5.4, 7.8, 9.1], [4.3, 6.6, 5.5]]
>>> matrix_divided(matrix, 3)
[[1.8, 2.6, 3.03], [1.43, 2.2, 1.83]]

Non int or floats:
>>> matrix = [['t', 'p', 'o'], [5, 'y', 8]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last)
...
TypeError: matrix must be a matrix (list of lists) of integers/floats


different row length:
>>> matrix = [[1, 2, 3, 4], [1, 2]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last)
...
TypeError: Each row of the matrix must have the same size

deviding by not(int/float):
>>> matrix = [[3, 5, 7], [6, 7, 8]]
>>> matrix_divided(matrix, 'a')
Traceback (most recent call last)
...
TypeError: div must be a number

div is 0:
>>> matrix = [[5, 8.7, 9], [2.3, 4.5, 7]]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

matrix is not list:
>>> matrix_divided("name", 4)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats
